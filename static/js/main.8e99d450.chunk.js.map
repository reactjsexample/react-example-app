{"version":3,"sources":["components/XxxHeader/XxxHeader.module.scss","assets/styles/XxxSharedStyles.module.scss","pages/XxxQuestionsPage/XxxQuestionsPage.module.scss","pages/XxxAnswersPage/XxxAnswersPage.module.scss","App.module.scss","assets/images/logo.svg","components/XxxSearchBox/XxxSearchBox.module.scss","pages/XxxAnswersPage/XxxAnswersPage.jsx","components/XxxSearchBox/XxxSearchBox.jsx","components/XxxHeader/XxxHeader.jsx","pages/XxxHomePage/XxxHomePage.jsx","pages/XxxPageNotFoundPage/XxxPageNotFoundPage.jsx","pages/XxxQuestionsPage/XxxQuestionsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","headerTitle","logo","searchBoxContainer","mainCard","page","pageMessageError","pageMessageContainer","pageMessageWarning","pageTitle","pageFooter","pageNavigationPanel","answerAccepted","answerCaption","answerInfo","answerNotAccepted","answerQuestionContainer","answersContainer","backToQuestions","questionCaption","questionInfo","questionTitle","app","__webpack_require__","p","searchBox","XxxAnswersPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","questionId","requestUrl","requestParams","state","answers","isEmpty","isError","isLoading","question","getQuestionId","getQuestion","_this2","unlisten","history","listen","console","log","match","params","id","setState","key","site","filter","order","sort","url","getQueryString","thisRef","fetch","then","response","status","json","data","hasOwnProperty","Array","isArray","items","length","getAnswers","catch","err","keys","map","encodeURIComponent","join","text","undefined","newText","DOMParser","parseFromString","documentElement","textContent","replace","time","Date","toLocaleDateString","year","month","day","_this3","pageView","react_default","a","createElement","className","sharedStyles","CircularProgress","styles","decodeHtmlEntities","title","view_count","score","tags","timeToShortDate","creation_date","questionBody","dangerouslySetInnerHTML","__html","body","item","is_accepted","answer_id","answerBody","Component","XxxSearchBox","isSearchButtonDisabled","previousSearchText","searchText","handleChange","bind","assertThisInitialized","handleSubmit","event","target","value","preventDefault","push","pathname","search","onSubmit","autoFocus","type","onChange","IconButton","aria-label","disabled","color","onClick","Search_default","withRouter","XxxHeader","src","alt","components_XxxSearchBox_XxxSearchBox","XxxHomePage","href","XxxPageNotFoundPage","XxxQuestionsPage","pageBaseUrl","requestedPage","currentPage","isMorePages","questions","handleFirstPage","handleNextPage","handlePreviousPage","readUrlQueryString","location","getQuestions","values","queryString","parse","baseUrl","has_more","navigateToPage","parseInt","toString","queryParams","question_id","dummy","FirstPage_default","ChevronLeft_default","ChevronRight_default","App","react_router_dom","components_XxxHeader_XxxHeader","react_router","exact","path","component","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e99d450.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"XxxHeader_header__1_1KF\",\"headerTitle\":\"XxxHeader_headerTitle__1_81R\",\"logo\":\"XxxHeader_logo__3G4XE\",\"searchBoxContainer\":\"XxxHeader_searchBoxContainer__2v2F3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCard\":\"XxxSharedStyles_mainCard__3SIRA\",\"page\":\"XxxSharedStyles_page__27M9s\",\"pageMessageError\":\"XxxSharedStyles_pageMessageError__cIUGn\",\"pageMessageContainer\":\"XxxSharedStyles_pageMessageContainer__2aGmj\",\"pageMessageWarning\":\"XxxSharedStyles_pageMessageWarning__22cCe\",\"pageTitle\":\"XxxSharedStyles_pageTitle__30m_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageFooter\":\"XxxQuestionsPage_pageFooter__22Qw2\",\"pageNavigationPanel\":\"XxxQuestionsPage_pageNavigationPanel__1riIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerAccepted\":\"XxxAnswersPage_answerAccepted__2AF2s\",\"answerCaption\":\"XxxAnswersPage_answerCaption__2Cwpr\",\"answerInfo\":\"XxxAnswersPage_answerInfo__1IlQk\",\"answerNotAccepted\":\"XxxAnswersPage_answerNotAccepted__1EpgF\",\"answerQuestionContainer\":\"XxxAnswersPage_answerQuestionContainer__3qsqw\",\"answersContainer\":\"XxxAnswersPage_answersContainer__2xGEk\",\"backToQuestions\":\"XxxAnswersPage_backToQuestions__1uUFb\",\"questionCaption\":\"XxxAnswersPage_questionCaption__2P1yB\",\"questionInfo\":\"XxxAnswersPage_questionInfo__1Ut32\",\"questionTitle\":\"XxxAnswersPage_questionTitle__1FEzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","module.exports = __webpack_public_path__ + \"static/media/logo.299e6db5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"XxxSearchBox_searchBox__3MpVo\"};","import React, { Component } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport styles from \"./XxxAnswersPage.module.scss\";\nimport sharedStyles from \"../../assets/styles/XxxSharedStyles.module.scss\";\n\nclass XxxAnswersPage extends Component {\n  // BEST PRACTICE: declare all private properties at the top\n  questionId = \"\";\n  requestUrl = \"\";\n  requestParams = \"\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      isEmpty: false,\n      isError: false,\n      isLoading: true,\n      question: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestionId();\n    this.getQuestion();\n  }\n\n  componentWillMount() {\n    this.unlisten = this.props.history.listen(() => {\n      console.log(\"url changed\");\n      this.getQuestionId();\n      this.getQuestion();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  getQuestionId() {\n    this.questionId = this.props.match.params.id;\n    console.log(\"this.questionId\", this.questionId);\n  }\n\n  getQuestion() {\n    this.setState({\n      isEmpty: false,\n      isError: false,\n      isLoading: true\n    });\n    this.setState({ isError: false, isLoading: true });\n    this.requestUrl =\n      \"https://api.stackexchange.com/2.2/questions/\" + this.questionId;\n    this.requestParams = {\n      key: \"U4DMV*8nvpm3EOpvf69Rxw((\",\n      site: \"stackoverflow\",\n      filter: \"withbody\",\n      order: \"desc\",\n      sort: \"votes\"\n    };\n    const url = this.requestUrl + \"?\" + this.getQueryString(this.requestParams);\n    const thisRef = this;\n    fetch(url)\n      .then(function(response) {\n        if (response.status !== 200) {\n          thisRef.setState({\n            isError: true,\n            isLoading: false\n          });\n          return;\n        }\n        response.json().then(data => {\n          if (\n            typeof data === \"object\" &&\n            data.hasOwnProperty(\"items\") &&\n            Array.isArray(data.items) &&\n            data.items.length > 0\n          ) {\n            thisRef.setState({\n              question: data.items[0]\n            });\n            thisRef.getAnswers();\n          } else {\n            thisRef.setState({\n              isEmpty: true,\n              isLoading: false\n            });\n          }\n        });\n      })\n      .catch(function(err) {\n        thisRef.setState({\n          isError: true,\n          isLoading: false\n        });\n      });\n  }\n\n  getAnswers() {\n    this.requestUrl += \"/answers\";\n    const url = this.requestUrl + \"?\" + this.getQueryString(this.requestParams);\n    const thisRef = this;\n    fetch(url)\n      .then(function(response) {\n        if (response.status !== 200) {\n          thisRef.setState({\n            isError: true,\n            isLoading: false\n          });\n          return;\n        }\n        response.json().then(data => {\n          if (\n            typeof data === \"object\" &&\n            data.hasOwnProperty(\"items\") &&\n            Array.isArray(data.items) &&\n            data.items.length > 0\n          ) {\n            thisRef.setState({\n              answers: data.items,\n              isLoading: false\n            });\n          } else {\n            thisRef.setState({\n              isEmpty: true,\n              isLoading: false\n            });\n          }\n        });\n      })\n      .catch(function(err) {\n        thisRef.setState({\n          isError: true,\n          isLoading: false\n        });\n      });\n  }\n\n  getQueryString(params) {\n    return Object.keys(params)\n      .map(\n        key => encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n      )\n      .join(\"&\");\n  }\n\n  decodeHtmlEntities(text) {\n    if (text === undefined || text === \"\") {\n      return \"\";\n    }\n    const doc = new DOMParser().parseFromString(text, \"text/html\");\n    let newText = doc.documentElement.textContent;\n    newText = newText.replace(\"&quot;\", '\"');\n    return newText;\n  }\n\n  timeToShortDate(time) {\n    const date = new Date(time);\n    const options = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\"\n    };\n    return date.toLocaleDateString(\"en\", options);\n  }\n\n  render() {\n    let pageView = null;\n    if (this.state.isLoading) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <CircularProgress />\n        </div>\n      );\n    }\n    if (this.state.isError) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageError}>\n            Error Occurred Getting Questions\n          </div>\n        </div>\n      );\n    }\n    if (this.state.isEmpty) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageWarning}>\n            No Questions Found\n          </div>\n        </div>\n      );\n    }\n    if (!(this.state.isEmpty || this.state.isError || this.state.isLoading)) {\n      pageView = (\n        <div className={styles.answersContainer}>\n          <div className={styles.answerQuestionContainer}>\n            <div className={styles.questionTitle}>\n              {this.decodeHtmlEntities(this.state.question.title)}\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Number of Views: </span>\n              <span className={styles.questionInfo}>\n                {this.state.question.view_count}\n              </span>\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Score: </span>\n              <span className={styles.questionInfo}>\n                {this.state.question.score}\n              </span>\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Tags: </span>\n              <span className={styles.questionInfo}>\n                {this.state.question.tags.join()}\n              </span>\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Asked: </span>\n              <span className={styles.questionInfo}>\n                {this.timeToShortDate(this.state.question.creation_date)}\n              </span>\n            </div>\n            <div\n              className={styles.questionBody}\n              dangerouslySetInnerHTML={{ __html: this.state.question.body }}\n            ></div>\n          </div>\n          {this.state.answers.map(item => (\n            <div\n              className={\n                item.is_accepted\n                  ? styles.answerAccepted\n                  : styles.answerNotAccepted\n              }\n              key={item.answer_id}\n            >\n              <div>\n                <span className={styles.answerCaption}>Score: </span>\n                <span className={styles.answerInfo}>{item.score}</span>\n              </div>\n              <div>\n                <span className={styles.answerCaption}>Answered: </span>\n                <span className={styles.answerInfo}>\n                  {this.timeToShortDate(item.creation_date)}\n                </span>\n              </div>\n              <div className={styles.answerCaption}>Answer:</div>\n              <div\n                className={styles.answerBody}\n                dangerouslySetInnerHTML={{ __html: item.body }}\n              ></div>\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return (\n      <div className={sharedStyles.page}>\n        <div className={sharedStyles.pageTitle}>Stack Exchange Answers</div>\n        <div className={sharedStyles.mainCard}>{pageView}</div>\n      </div>\n    );\n  }\n}\n\nexport default XxxAnswersPage;\n","import React, { Component } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { withRouter } from \"react-router-dom\";\n\nimport styles from \"./XxxSearchBox.module.scss\";\n\nclass XxxSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSearchButtonDisabled: true,\n      previousSearchText: null,\n      searchText: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const searchText = event.target.value;\n    // since setState is asynchronous, use callback for anything that depends on knowing state after setting state\n    this.setState({ searchText: searchText }, () => {\n      // it's ok to do setState in callback of setState\n      // Best Practice: don't use this.state in setState, get state from the updater function\n      this.setState(state => {\n        return {\n          isSearchButtonDisabled:\n            state.searchText.length === 0 ||\n            state.searchText === state.previousSearchText\n        };\n      });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.isSearchButtonDisabled) {\n      return;\n    }\n    this.setState({\n      isSearchButtonDisabled: true,\n      previousSearchText: this.state.searchText\n    });\n    // set search text as parameter in url and navigate to the page that will do the search\n    this.props.history.push({\n      pathname: \"/questions\",\n      search: \"?title=\" + encodeURIComponent(this.state.searchText)\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className={styles.searchBox} onSubmit={this.handleSubmit}>\n          <input\n            autoFocus\n            type=\"search\"\n            value={this.state.searchText}\n            onChange={this.handleChange}\n          />\n          <IconButton\n            aria-label=\"search\"\n            disabled={this.state.isSearchButtonDisabled}\n            color=\"primary\"\n            onClick={this.handleSubmit}\n          >\n            <SearchIcon />\n          </IconButton>\n        </form>\n      </div>\n    );\n  }\n}\n\n// HOC Higher Order Component wraps our component\n// withRouter allows us to use history to navigate programmatically\nexport default withRouter(XxxSearchBox);\n","import React, { Component } from \"react\";\nimport logo from \"../../assets/images/logo.svg\";\nimport styles from \"./XxxHeader.module.scss\";\nimport XxxSearchBox from \"../XxxSearchBox/XxxSearchBox\";\n\nclass XxxHeader extends Component {\n  render() {\n    return (\n      <div className={styles.header}>\n        <img src={logo} className={styles.logo} alt=\"logo\" />\n        <div className={styles.headerTitle}>React Example App</div>\n        <div className={styles.searchBoxContainer}>\n          <XxxSearchBox />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default XxxHeader;\n","import React, {Component} from 'react';\nimport sharedStyles from '../../assets/styles/XxxSharedStyles.module.scss';\n\nclass XxxHomePage extends Component {\n  render() {\n    return (\n        <div className={sharedStyles.page}>\n          <div className={sharedStyles.pageTitle}>Stack Exchange Search</div>\n          <div className={sharedStyles.mainCard}>\n            <p>This will search Stack Exchange questions for given title text.</p>\n            <p>Enter your search text and click the icon or press the Enter key. A list of matching questions will be\n              shown.</p>\n            <p>After that, you can click on a question to see the answers.</p>\n            <p>Full source available at <a\n                href=\"https://github.com/reactjsexample/react-example-app\">https://github.com/reactjsexample/react-example-app</a>\n            </p>\n            <h3>Written in React 16.8</h3>\n            <h4>By JC Lango</h4>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default XxxHomePage;\n","import React, {Component} from 'react';\nimport sharedStyles from '../../assets/styles/XxxSharedStyles.module.scss';\n\nclass XxxPageNotFoundPage extends Component {\n  render() {\n    return (\n        <div className={sharedStyles.page}>\n          <div className={sharedStyles.pageTitle}>Page Not Found</div>\n          <div className={sharedStyles.mainCard}>\n            <p>The requested page at this address is not found. <a href=\"/\">Home Page</a></p>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default XxxPageNotFoundPage;\n","import React, { Component } from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { CircularProgress, IconButton } from \"@material-ui/core\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport queryString from \"query-string\";\nimport { withRouter } from \"react-router-dom\";\n\nimport sharedStyles from \"../../assets/styles/XxxSharedStyles.module.scss\";\nimport styles from \"./XxxQuestionsPage.module.scss\";\n\nclass XxxQuestionsPage extends Component {\n  // BEST PRACTICE: declare all private properties at the top\n  pageBaseUrl = \"/questions\";\n  requestedPage = \"\";\n  title = \"\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: \"\",\n      isEmpty: false,\n      isError: false,\n      isLoading: true,\n      isMorePages: false,\n      questions: []\n    };\n    // bind event handlers so we can refer to the this object\n    this.handleFirstPage = this.handleFirstPage.bind(this);\n    this.handleNextPage = this.handleNextPage.bind(this);\n    this.handlePreviousPage = this.handlePreviousPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.readUrlQueryString(this.props.location.search);\n    this.getQuestions();\n  }\n\n  componentWillMount() {\n    this.unlisten = this.props.history.listen(location => {\n      this.readUrlQueryString(location.search);\n      this.getQuestions();\n    });\n  }\n\n  readUrlQueryString(search) {\n    const values = queryString.parse(search);\n    this.title = values.title;\n    this.requestedPage = values.page;\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  getQuestions() {\n    this.setState({\n      isEmpty: false,\n      isError: false,\n      isLoading: true\n    });\n    const baseUrl = \"https://api.stackexchange.com/2.2/search/advanced\";\n    const requestParams = {\n      key: \"U4DMV*8nvpm3EOpvf69Rxw((\",\n      title: this.title || \"\",\n      answers: \"1\",\n      site: \"stackoverflow\",\n      filter: \"withbody\",\n      page: this.requestedPage || \"1\",\n      order: \"desc\",\n      sort: \"votes\"\n    };\n    const url = baseUrl + \"?\" + this.getQueryString(requestParams);\n    const thisRef = this;\n    fetch(url)\n      .then(function(response) {\n        if (response.status !== 200) {\n          thisRef.setState({\n            isError: true,\n            isLoading: false\n          });\n          return;\n        }\n        response.json().then(data => {\n          if (\n            typeof data === \"object\" &&\n            data.hasOwnProperty(\"items\") &&\n            Array.isArray(data.items) &&\n            data.items.length > 0\n          ) {\n            thisRef.setState({\n              currentPage: requestParams.page,\n              isLoading: false,\n              isMorePages: data.has_more,\n              questions: data.items\n            });\n          } else {\n            thisRef.setState({\n              isEmpty: true,\n              isLoading: false\n            });\n          }\n        });\n      })\n      .catch(function(err) {\n        thisRef.setState({\n          isError: true,\n          isLoading: false\n        });\n      });\n  }\n\n  getQueryString(params) {\n    return Object.keys(params)\n      .map(\n        key => encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n      )\n      .join(\"&\");\n  }\n\n  decodeHtmlEntities(text) {\n    if (text === undefined || text === \"\") {\n      return \"\";\n    }\n    const doc = new DOMParser().parseFromString(text, \"text/html\");\n    let newText = doc.documentElement.textContent;\n    newText = newText.replace(\"&quot;\", '\"');\n    return newText;\n  }\n\n  handleFirstPage() {\n    this.requestedPage = \"1\";\n    this.navigateToPage();\n  }\n\n  handleNextPage(event) {\n    this.requestedPage = (parseInt(this.state.currentPage, 10) + 1).toString();\n    this.navigateToPage();\n  }\n\n  handlePreviousPage() {\n    this.requestedPage = (parseInt(this.state.currentPage, 10) - 1).toString();\n    this.navigateToPage();\n  }\n\n  navigateToPage() {\n    const queryParams = {\n      title: this.title,\n      page: this.requestedPage\n    };\n    this.props.history.push(\n      this.pageBaseUrl + \"?\" + this.getQueryString(queryParams)\n    );\n  }\n\n  render() {\n    let pageView = null;\n    if (this.state.isLoading) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <CircularProgress />\n        </div>\n      );\n    }\n    if (this.state.isError) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageError}>\n            Error Occurred Getting Questions\n          </div>\n        </div>\n      );\n    }\n    if (this.state.isEmpty) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageWarning}>\n            No Questions Found\n          </div>\n        </div>\n      );\n    }\n    if (!(this.state.isEmpty || this.state.isError || this.state.isLoading)) {\n      pageView = (\n        <div>\n          <ul>\n            {this.state.questions.map(item => (\n              <li key={item.question_id}>\n                <a\n                  href={\"/answers/\" + item.question_id}\n                  className={styles.dummy}\n                  key={item.question_id}\n                >\n                  {this.decodeHtmlEntities(item.title)}\n                </a>\n              </li>\n            ))}\n          </ul>\n          <div className={styles.pageFooter}>\n            <div className={styles.pageNavigationPanel}>\n              <span>Page {this.state.currentPage}</span>\n              <IconButton\n                disabled={this.state.currentPage === \"1\"}\n                onClick={this.handleFirstPage}\n                title=\"Go to First Page\"\n              >\n                <FirstPageIcon />\n              </IconButton>\n              <IconButton\n                disabled={this.state.currentPage === \"1\"}\n                onClick={this.handlePreviousPage}\n                title=\"Go to Previous Page\"\n              >\n                <ChevronLeftIcon />\n              </IconButton>\n              <IconButton\n                disabled={!this.state.isMorePages}\n                onClick={this.handleNextPage}\n                title=\"Go to Next Page\"\n              >\n                <ChevronRightIcon />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={sharedStyles.page}>\n        <div className={sharedStyles.pageTitle}>Stack Exchange Questions</div>\n        <div className={sharedStyles.mainCard}>{pageView}</div>\n      </div>\n    );\n  }\n}\n\n// HOC Higher Order Component wraps our component\n// withRouter allows us to use history to navigate programmatically\nexport default withRouter(XxxQuestionsPage);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport styles from \"./App.module.scss\";\nimport XxxAnswersPage from \"./pages/XxxAnswersPage/XxxAnswersPage\";\nimport XxxHeader from \"./components/XxxHeader/XxxHeader\";\nimport XxxHomePage from \"./pages/XxxHomePage/XxxHomePage\";\nimport XxxPageNotFoundPage from \"./pages/XxxPageNotFoundPage/XxxPageNotFoundPage\";\nimport XxxQuestionsPage from \"./pages/XxxQuestionsPage/XxxQuestionsPage\";\n\nfunction App() {\n  return (\n    <div className={styles.app} id=\"xxx-app\">\n      <Router>\n        <XxxHeader />\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={XxxHomePage} />\n            <Route path=\"/answers/:id\" component={XxxAnswersPage} />\n            <Route path=\"/questions\" component={XxxQuestionsPage} />\n            <Route component={XxxPageNotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
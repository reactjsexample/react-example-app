{"version":3,"sources":["components/XxxHeader/XxxHeader.module.scss","assets/styles/XxxSharedStyles.module.scss","pages/XxxQuestionsPage/XxxQuestionsPage.module.scss","App.module.scss","pages/XxxAnswersPage/XxxAnswersPage.module.scss","assets/images/logo.svg","components/XxxSearchBox/XxxSearchBox.module.scss","pages/XxxAnswersPage/XxxAnswersPage.jsx","components/XxxSearchBox/XxxSearchBox.jsx","components/XxxHeader/XxxHeader.jsx","pages/XxxHomePage/XxxHomePage.jsx","pages/XxxPageNotFoundPage/XxxPageNotFoundPage.jsx","pages/XxxQuestionsPage/XxxQuestionsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","XxxAnswersPage","props","questionId","requestUrl","requestParams","state","answers","isEmpty","isError","isLoading","question","this","getQuestionId","getQuestion","unlisten","history","listen","match","params","id","setState","key","site","filter","order","sort","url","getQueryString","thisRef","fetch","then","response","status","json","data","hasOwnProperty","Array","isArray","items","length","getAnswers","catch","err","Object","keys","map","encodeURIComponent","join","text","undefined","newText","DOMParser","parseFromString","documentElement","textContent","replace","time","Date","toLocaleDateString","year","month","day","pageView","className","sharedStyles","pageMessageContainer","CircularProgress","pageMessageError","pageMessageWarning","styles","answersContainer","answerQuestionContainer","questionTitle","decodeHtmlEntities","title","questionCaption","questionInfo","view_count","score","tags","timeToShortDate","creation_date","questionBody","dangerouslySetInnerHTML","__html","body","item","is_accepted","answerAccepted","answerNotAccepted","answer_id","answerCaption","answerInfo","answerBody","page","pageTitle","mainCard","Component","XxxSearchBox","isSearchButtonDisabled","previousSearchText","searchText","handleChange","bind","handleSubmit","event","target","value","preventDefault","push","pathname","search","searchBox","onSubmit","autoFocus","type","onChange","IconButton","aria-label","disabled","color","onClick","withRouter","XxxHeader","header","src","logo","alt","headerTitle","searchBoxContainer","XxxHomePage","href","XxxPageNotFoundPage","XxxQuestionsPage","pageBaseUrl","requestedPage","currentPage","isMorePages","questions","handleFirstPage","handleNextPage","handlePreviousPage","readUrlQueryString","location","getQuestions","values","queryString","parse","baseUrl","has_more","navigateToPage","parseInt","toString","queryParams","question_id","dummy","pageFooter","pageNavigationPanel","App","app","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9754c1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"XxxHeader_header__1_1KF\",\"headerTitle\":\"XxxHeader_headerTitle__1_81R\",\"logo\":\"XxxHeader_logo__3G4XE\",\"searchBoxContainer\":\"XxxHeader_searchBoxContainer__2v2F3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCard\":\"XxxSharedStyles_mainCard__3SIRA\",\"page\":\"XxxSharedStyles_page__27M9s\",\"pageMessageError\":\"XxxSharedStyles_pageMessageError__cIUGn\",\"pageMessageContainer\":\"XxxSharedStyles_pageMessageContainer__2aGmj\",\"pageMessageWarning\":\"XxxSharedStyles_pageMessageWarning__22cCe\",\"pageTitle\":\"XxxSharedStyles_pageTitle__30m_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageFooter\":\"XxxQuestionsPage_pageFooter__22Qw2\",\"pageNavigationPanel\":\"XxxQuestionsPage_pageNavigationPanel__1riIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerAccepted\":\"XxxAnswersPage_answerAccepted__2AF2s\",\"answerCaption\":\"XxxAnswersPage_answerCaption__2Cwpr\",\"answerInfo\":\"XxxAnswersPage_answerInfo__1IlQk\",\"answerNotAccepted\":\"XxxAnswersPage_answerNotAccepted__1EpgF\",\"answerQuestionContainer\":\"XxxAnswersPage_answerQuestionContainer__3qsqw\",\"answersContainer\":\"XxxAnswersPage_answersContainer__2xGEk\",\"backToQuestions\":\"XxxAnswersPage_backToQuestions__1uUFb\",\"questionCaption\":\"XxxAnswersPage_questionCaption__2P1yB\",\"questionInfo\":\"XxxAnswersPage_questionInfo__1Ut32\",\"questionTitle\":\"XxxAnswersPage_questionTitle__1FEzL\"};","module.exports = __webpack_public_path__ + \"static/media/logo.299e6db5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"XxxSearchBox_searchBox__3MpVo\"};","import React, { Component } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport styles from \"./XxxAnswersPage.module.scss\";\nimport sharedStyles from \"../../assets/styles/XxxSharedStyles.module.scss\";\n\nclass XxxAnswersPage extends Component {\n  // BEST PRACTICE: declare all private properties at the top\n  questionId = \"\";\n  requestUrl = \"\";\n  requestParams = \"\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n      isEmpty: false,\n      isError: false,\n      isLoading: true,\n      question: {}\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestionId();\n    this.getQuestion();\n  }\n\n  componentWillMount() {\n    this.unlisten = this.props.history.listen(() => {\n      this.getQuestionId();\n      this.getQuestion();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  getQuestionId() {\n    this.questionId = this.props.match.params.id;\n  }\n\n  getQuestion() {\n    this.setState({\n      isEmpty: false,\n      isError: false,\n      isLoading: true\n    });\n    this.setState({ isError: false, isLoading: true });\n    this.requestUrl =\n      \"https://api.stackexchange.com/2.2/questions/\" + this.questionId;\n    this.requestParams = {\n      key: \"U4DMV*8nvpm3EOpvf69Rxw((\",\n      site: \"stackoverflow\",\n      filter: \"withbody\",\n      order: \"desc\",\n      sort: \"votes\"\n    };\n    const url = this.requestUrl + \"?\" + this.getQueryString(this.requestParams);\n    const thisRef = this;\n    fetch(url)\n      .then(function(response) {\n        if (response.status !== 200) {\n          thisRef.setState({\n            isError: true,\n            isLoading: false\n          });\n          return;\n        }\n        response.json().then(data => {\n          if (\n            typeof data === \"object\" &&\n            data.hasOwnProperty(\"items\") &&\n            Array.isArray(data.items) &&\n            data.items.length > 0\n          ) {\n            thisRef.setState({\n              question: data.items[0]\n            });\n            thisRef.getAnswers();\n          } else {\n            thisRef.setState({\n              isEmpty: true,\n              isLoading: false\n            });\n          }\n        });\n      })\n      .catch(function(err) {\n        thisRef.setState({\n          isError: true,\n          isLoading: false\n        });\n      });\n  }\n\n  getAnswers() {\n    this.requestUrl += \"/answers\";\n    const url = this.requestUrl + \"?\" + this.getQueryString(this.requestParams);\n    const thisRef = this;\n    fetch(url)\n      .then(function(response) {\n        if (response.status !== 200) {\n          thisRef.setState({\n            isError: true,\n            isLoading: false\n          });\n          return;\n        }\n        response.json().then(data => {\n          if (\n            typeof data === \"object\" &&\n            data.hasOwnProperty(\"items\") &&\n            Array.isArray(data.items) &&\n            data.items.length > 0\n          ) {\n            thisRef.setState({\n              answers: data.items,\n              isLoading: false\n            });\n          } else {\n            thisRef.setState({\n              isEmpty: true,\n              isLoading: false\n            });\n          }\n        });\n      })\n      .catch(function(err) {\n        thisRef.setState({\n          isError: true,\n          isLoading: false\n        });\n      });\n  }\n\n  getQueryString(params) {\n    return Object.keys(params)\n      .map(\n        key => encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n      )\n      .join(\"&\");\n  }\n\n  decodeHtmlEntities(text) {\n    if (text === undefined || text === \"\") {\n      return \"\";\n    }\n    const doc = new DOMParser().parseFromString(text, \"text/html\");\n    let newText = doc.documentElement.textContent;\n    newText = newText.replace(\"&quot;\", '\"');\n    return newText;\n  }\n\n  timeToShortDate(time) {\n    const date = new Date(time);\n    const options = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\"\n    };\n    return date.toLocaleDateString(\"en\", options);\n  }\n\n  render() {\n    let pageView = null;\n    if (this.state.isLoading) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <CircularProgress />\n        </div>\n      );\n    }\n    if (this.state.isError) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageError}>\n            Error Occurred Getting Questions\n          </div>\n        </div>\n      );\n    }\n    if (this.state.isEmpty) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageWarning}>\n            No Questions Found\n          </div>\n        </div>\n      );\n    }\n    if (!(this.state.isEmpty || this.state.isError || this.state.isLoading)) {\n      pageView = (\n        <div className={styles.answersContainer}>\n          <div className={styles.answerQuestionContainer}>\n            <div className={styles.questionTitle}>\n              {this.decodeHtmlEntities(this.state.question.title)}\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Number of Views: </span>\n              <span className={styles.questionInfo}>\n                {this.state.question.view_count}\n              </span>\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Score: </span>\n              <span className={styles.questionInfo}>\n                {this.state.question.score}\n              </span>\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Tags: </span>\n              <span className={styles.questionInfo}>\n                {this.state.question.tags.join()}\n              </span>\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Asked: </span>\n              <span className={styles.questionInfo}>\n                {this.timeToShortDate(this.state.question.creation_date)}\n              </span>\n            </div>\n            <div\n              className={styles.questionBody}\n              dangerouslySetInnerHTML={{ __html: this.state.question.body }}\n            ></div>\n          </div>\n          {this.state.answers.map(item => (\n            <div\n              className={\n                item.is_accepted\n                  ? styles.answerAccepted\n                  : styles.answerNotAccepted\n              }\n              key={item.answer_id}\n            >\n              <div>\n                <span className={styles.answerCaption}>Score: </span>\n                <span className={styles.answerInfo}>{item.score}</span>\n              </div>\n              <div>\n                <span className={styles.answerCaption}>Answered: </span>\n                <span className={styles.answerInfo}>\n                  {this.timeToShortDate(item.creation_date)}\n                </span>\n              </div>\n              <div className={styles.answerCaption}>Answer:</div>\n              <div\n                className={styles.answerBody}\n                dangerouslySetInnerHTML={{ __html: item.body }}\n              ></div>\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return (\n      <div className={sharedStyles.page}>\n        <div className={sharedStyles.pageTitle}>Stack Exchange Answers</div>\n        <div className={sharedStyles.mainCard}>{pageView}</div>\n      </div>\n    );\n  }\n}\n\nexport default XxxAnswersPage;\n","import React, { Component } from \"react\";\nimport { IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { withRouter } from \"react-router-dom\";\n\nimport styles from \"./XxxSearchBox.module.scss\";\n\nclass XxxSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSearchButtonDisabled: true,\n      previousSearchText: null,\n      searchText: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const searchText = event.target.value;\n    // since setState is asynchronous, use callback for anything that depends on knowing state after setting state\n    this.setState({ searchText: searchText }, () => {\n      // it's ok to do setState in callback of setState\n      // Best Practice: don't use this.state in setState, get state from the updater function\n      this.setState(state => {\n        return {\n          isSearchButtonDisabled:\n            state.searchText.length === 0 ||\n            state.searchText === state.previousSearchText\n        };\n      });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.isSearchButtonDisabled) {\n      return;\n    }\n    this.setState({\n      isSearchButtonDisabled: true,\n      previousSearchText: this.state.searchText\n    });\n    // set search text as parameter in url and navigate to the page that will do the search\n    this.props.history.push({\n      pathname: \"questions\",\n      search: \"?title=\" + encodeURIComponent(this.state.searchText)\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className={styles.searchBox} onSubmit={this.handleSubmit}>\n          <input\n            autoFocus\n            type=\"search\"\n            value={this.state.searchText}\n            onChange={this.handleChange}\n          />\n          <IconButton\n            aria-label=\"search\"\n            disabled={this.state.isSearchButtonDisabled}\n            color=\"primary\"\n            onClick={this.handleSubmit}\n          >\n            <SearchIcon />\n          </IconButton>\n        </form>\n      </div>\n    );\n  }\n}\n\n// HOC Higher Order Component wraps our component\n// withRouter allows us to use history to navigate programmatically\nexport default withRouter(XxxSearchBox);\n","import React, { Component } from \"react\";\nimport logo from \"../../assets/images/logo.svg\";\nimport styles from \"./XxxHeader.module.scss\";\nimport XxxSearchBox from \"../XxxSearchBox/XxxSearchBox\";\n\nclass XxxHeader extends Component {\n  render() {\n    return (\n      <div className={styles.header}>\n        <img src={logo} className={styles.logo} alt=\"logo\" />\n        <div className={styles.headerTitle}>React Example App</div>\n        <div className={styles.searchBoxContainer}>\n          <XxxSearchBox />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default XxxHeader;\n","import React, {Component} from 'react';\nimport sharedStyles from '../../assets/styles/XxxSharedStyles.module.scss';\n\nclass XxxHomePage extends Component {\n  render() {\n    return (\n        <div className={sharedStyles.page}>\n          <div className={sharedStyles.pageTitle}>Stack Exchange Search</div>\n          <div className={sharedStyles.mainCard}>\n            <p>This will search Stack Exchange questions for given title text.</p>\n            <p>Enter your search text and click the icon or press the Enter key. A list of matching questions will be\n              shown.</p>\n            <p>After that, you can click on a question to see the answers.</p>\n            <p>Full source available at <a\n                href=\"https://github.com/reactjsexample/react-example-app\">https://github.com/reactjsexample/react-example-app</a>\n            </p>\n            <h3>Written in React 16.8</h3>\n            <h4>By JC Lango</h4>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default XxxHomePage;\n","import React, { Component } from \"react\";\nimport sharedStyles from \"../../assets/styles/XxxSharedStyles.module.scss\";\n\nclass XxxPageNotFoundPage extends Component {\n  render() {\n    return (\n      <div className={sharedStyles.page}>\n        <div className={sharedStyles.pageTitle}>Page Not Found</div>\n        <div className={sharedStyles.mainCard}>\n          <p>\n            The requested page at this address is not found.\n            <a href=\"/\">Home Page</a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default XxxPageNotFoundPage;\n","import React, { Component } from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { CircularProgress, IconButton } from \"@material-ui/core\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport queryString from \"query-string\";\nimport { withRouter } from \"react-router-dom\";\n\nimport sharedStyles from \"../../assets/styles/XxxSharedStyles.module.scss\";\nimport styles from \"./XxxQuestionsPage.module.scss\";\n\nclass XxxQuestionsPage extends Component {\n  // BEST PRACTICE: declare all private properties at the top\n  pageBaseUrl = \"questions\";\n  requestedPage = \"\";\n  title = \"\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: \"\",\n      isEmpty: false,\n      isError: false,\n      isLoading: true,\n      isMorePages: false,\n      questions: []\n    };\n    // bind event handlers so we can refer to the this object\n    this.handleFirstPage = this.handleFirstPage.bind(this);\n    this.handleNextPage = this.handleNextPage.bind(this);\n    this.handlePreviousPage = this.handlePreviousPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.readUrlQueryString(this.props.location.search);\n    this.getQuestions();\n  }\n\n  componentWillMount() {\n    this.unlisten = this.props.history.listen(location => {\n      this.readUrlQueryString(location.search);\n      this.getQuestions();\n    });\n  }\n\n  readUrlQueryString(search) {\n    const values = queryString.parse(search);\n    this.title = values.title;\n    this.requestedPage = values.page;\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  getQuestions() {\n    this.setState({\n      isEmpty: false,\n      isError: false,\n      isLoading: true\n    });\n    const baseUrl = \"https://api.stackexchange.com/2.2/search/advanced\";\n    const requestParams = {\n      key: \"U4DMV*8nvpm3EOpvf69Rxw((\",\n      title: this.title || \"\",\n      answers: \"1\",\n      site: \"stackoverflow\",\n      filter: \"withbody\",\n      page: this.requestedPage || \"1\",\n      order: \"desc\",\n      sort: \"votes\"\n    };\n    const url = baseUrl + \"?\" + this.getQueryString(requestParams);\n    const thisRef = this;\n    fetch(url)\n      .then(function(response) {\n        if (response.status !== 200) {\n          thisRef.setState({\n            isError: true,\n            isLoading: false\n          });\n          return;\n        }\n        response.json().then(data => {\n          if (\n            typeof data === \"object\" &&\n            data.hasOwnProperty(\"items\") &&\n            Array.isArray(data.items) &&\n            data.items.length > 0\n          ) {\n            thisRef.setState({\n              currentPage: requestParams.page,\n              isLoading: false,\n              isMorePages: data.has_more,\n              questions: data.items\n            });\n          } else {\n            thisRef.setState({\n              isEmpty: true,\n              isLoading: false\n            });\n          }\n        });\n      })\n      .catch(function(err) {\n        thisRef.setState({\n          isError: true,\n          isLoading: false\n        });\n      });\n  }\n\n  getQueryString(params) {\n    return Object.keys(params)\n      .map(\n        key => encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n      )\n      .join(\"&\");\n  }\n\n  decodeHtmlEntities(text) {\n    if (text === undefined || text === \"\") {\n      return \"\";\n    }\n    const doc = new DOMParser().parseFromString(text, \"text/html\");\n    let newText = doc.documentElement.textContent;\n    newText = newText.replace(\"&quot;\", '\"');\n    return newText;\n  }\n\n  handleFirstPage() {\n    this.requestedPage = \"1\";\n    this.navigateToPage();\n  }\n\n  handleNextPage(event) {\n    this.requestedPage = (parseInt(this.state.currentPage, 10) + 1).toString();\n    this.navigateToPage();\n  }\n\n  handlePreviousPage() {\n    this.requestedPage = (parseInt(this.state.currentPage, 10) - 1).toString();\n    this.navigateToPage();\n  }\n\n  navigateToPage() {\n    const queryParams = {\n      title: this.title,\n      page: this.requestedPage\n    };\n    this.props.history.push(\n      this.pageBaseUrl + \"?\" + this.getQueryString(queryParams)\n    );\n  }\n\n  render() {\n    let pageView = null;\n    if (this.state.isLoading) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <CircularProgress />\n        </div>\n      );\n    }\n    if (this.state.isError) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageError}>\n            Error Occurred Getting Questions\n          </div>\n        </div>\n      );\n    }\n    if (this.state.isEmpty) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageWarning}>\n            No Questions Found\n          </div>\n        </div>\n      );\n    }\n    if (!(this.state.isEmpty || this.state.isError || this.state.isLoading)) {\n      pageView = (\n        <div>\n          <ul>\n            {this.state.questions.map(item => (\n              <li key={item.question_id}>\n                <a\n                  href={\"answers/\" + item.question_id}\n                  className={styles.dummy}\n                  key={item.question_id}\n                >\n                  {this.decodeHtmlEntities(item.title)}\n                </a>\n              </li>\n            ))}\n          </ul>\n          <div className={styles.pageFooter}>\n            <div className={styles.pageNavigationPanel}>\n              <span>Page {this.state.currentPage}</span>\n              <IconButton\n                disabled={this.state.currentPage === \"1\"}\n                onClick={this.handleFirstPage}\n                title=\"Go to First Page\"\n              >\n                <FirstPageIcon />\n              </IconButton>\n              <IconButton\n                disabled={this.state.currentPage === \"1\"}\n                onClick={this.handlePreviousPage}\n                title=\"Go to Previous Page\"\n              >\n                <ChevronLeftIcon />\n              </IconButton>\n              <IconButton\n                disabled={!this.state.isMorePages}\n                onClick={this.handleNextPage}\n                title=\"Go to Next Page\"\n              >\n                <ChevronRightIcon />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={sharedStyles.page}>\n        <div className={sharedStyles.pageTitle}>Stack Exchange Questions</div>\n        <div className={sharedStyles.mainCard}>{pageView}</div>\n      </div>\n    );\n  }\n}\n\n// HOC Higher Order Component wraps our component\n// withRouter allows us to use history to navigate programmatically\nexport default withRouter(XxxQuestionsPage);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport styles from \"./App.module.scss\";\nimport XxxAnswersPage from \"./pages/XxxAnswersPage/XxxAnswersPage\";\nimport XxxHeader from \"./components/XxxHeader/XxxHeader\";\nimport XxxHomePage from \"./pages/XxxHomePage/XxxHomePage\";\nimport XxxPageNotFoundPage from \"./pages/XxxPageNotFoundPage/XxxPageNotFoundPage\";\nimport XxxQuestionsPage from \"./pages/XxxQuestionsPage/XxxQuestionsPage\";\n\nfunction App() {\n  return (\n    <div className={styles.app} id=\"xxx-app\">\n      <Router>\n        <XxxHeader />\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={XxxHomePage} />\n            <Route path=\"/answers/:id\" component={XxxAnswersPage} />\n            <Route path=\"/questions\" component={XxxQuestionsPage} />\n            <Route component={XxxPageNotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}